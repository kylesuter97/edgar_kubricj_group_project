import pytest
import ref_data
import pandas as pd
import os


def test_get_sp100():
    
    assert type(ref_data.get_sp100()) == list
    
    assert len(ref_data.get_sp100()) > 99


def test_get_yahoo_data():
    output = ref_data.get_yahoo_data('2019-01-01', '2020-01-01', tickers=ref_data.get_sp100(), time_period='daily')

    for col in ['date','high','low','price','volume','1daily_return','2daily_return','3daily_return','5daily_return','10daily_return','symbol']:
        assert col in output.columns
    
    for ticker in ref_data.get_sp100():
        assert output['symbol'].eq(ticker).any() == True

    for date_val in output['date']:
        assert pd.to_datetime('2019-01-01') <= date_val
        assert pd.to_datetime('2020-01-01') >= date_val

    assert type(output)== pd.core.frame.DataFrame



def test_get_sentiment_word_dict1():
    assert ref_data.get_sentiment_word_dict()['Positive'] == ['ABLE', 'ABUNDANCE', 'ABUNDANT', 'ACCLAIMED', 'ACCOMPLISH', 'ACCOMPLISHED', 'ACCOMPLISHES', 'ACCOMPLISHING', 'ACCOMPLISHMENT', 'ACCOMPLISHMENTS', 'ACHIEVE', 'ACHIEVED', 'ACHIEVEMENT', 'ACHIEVEMENTS', 'ACHIEVES', 'ACHIEVING', 'ADEQUATELY', 'ADVANCEMENT', 'ADVANCEMENTS', 'ADVANCES', 'ADVANCING', 'ADVANTAGE', 'ADVANTAGED', 'ADVANTAGEOUS', 'ADVANTAGEOUSLY', 'ADVANTAGES', 'ALLIANCE', 'ALLIANCES', 'ASSURE', 'ASSURED', 'ASSURES', 'ASSURING', 
'ATTAIN', 'ATTAINED', 'ATTAINING', 'ATTAINMENT', 'ATTAINMENTS', 'ATTAINS', 'ATTRACTIVE', 'ATTRACTIVENESS', 'BEAUTIFUL', 'BEAUTIFULLY', 'BENEFICIALLY', 'BENEFITED', 'BENEFITING', 'BENEFITTED', 'BENEFITTING', 'BEST', 'BETTER', 'BOLSTERED', 'BOLSTERING', 'BOLSTERS', 'BOOM', 'BOOMING', 'BOOST', 'BOOSTED', 'BREAKTHROUGH', 'BREAKTHROUGHS', 'BRILLIANT', 'CHARITABLE', 'COLLABORATE', 'COLLABORATED', 'COLLABORATES', 'COLLABORATING', 'COLLABORATION', 'COLLABORATIONS', 'COLLABORATIVE', 'COLLABORATOR', 'COLLABORATORS', 'COMPLIMENT', 'COMPLIMENTARY', 'COMPLIMENTED', 'COMPLIMENTING', 'COMPLIMENTS', 'CONCLUSIVE', 'CONCLUSIVELY', 'CONDUCIVE', 'CONFIDENT', 'CONSTRUCTIVE', 'CONSTRUCTIVELY', 'COURTEOUS', 'CREATIVE', 'CREATIVELY', 'CREATIVENESS', 'CREATIVITY', 'DELIGHT', 'DELIGHTED', 'DELIGHTFUL', 'DELIGHTFULLY', 'DELIGHTING', 'DELIGHTS', 'DEPENDABILITY', 'DEPENDABLE', 'DESIRABLE', 'DESIRED', 'DESPITE', 'DESTINED', 'DILIGENT', 'DILIGENTLY', 'DISTINCTION', 'DISTINCTIONS', 'DISTINCTIVE', 'DISTINCTIVELY', 'DISTINCTIVENESS', 'DREAM', 'EASIER', 'EASILY', 'EASY', 'EFFICIENCIES', 'EFFICIENCY', 'EFFICIENT', 'EFFICIENTLY', 'EMPOWER', 'EMPOWERED', 'EMPOWERING', 'EMPOWERS', 'ENABLE', 'ENABLED', 'ENABLES', 'ENABLING', 'ENCOURAGED', 'ENCOURAGEMENT', 'ENCOURAGES', 'ENCOURAGING', 'ENHANCE', 'ENHANCED', 'ENHANCEMENT', 'ENHANCEMENTS', 'ENHANCES', 'ENHANCING', 'ENJOY', 'ENJOYABLE', 'ENJOYABLY', 'ENJOYED', 'ENJOYING', 'ENJOYMENT', 'ENJOYS', 'ENTHUSIASM', 'ENTHUSIASTIC', 'ENTHUSIASTICALLY', 'EXCELLENCE', 'EXCELLENT', 'EXCELLING', 'EXCELS', 'EXCEPTIONAL', 
'EXCEPTIONALLY', 'EXCITED', 'EXCITEMENT', 'EXCITING', 'EXCLUSIVE', 'EXCLUSIVELY', 'EXCLUSIVENESS', 'EXCLUSIVES', 'EXCLUSIVITY', 'EXEMPLARY', 'FANTASTIC', 'FAVORABLE', 'FAVORABLY', 'FAVORED', 'FAVORING', 'FAVORITE', 'FAVORITES', 'FRIENDLY', 'GAIN', 'GAINED', 'GAINING', 'GAINS', 'GOOD', 'GREATEST', 'GREATLY', 'GREATNESS', 'HAPPIEST', 'HAPPILY', 'HAPPINESS', 'HAPPY', 'HIGHEST', 'HONOR', 'HONORED', 'HONORING', 'HONORS', 'IDEAL', 'IMPRESS', 
'IMPRESSED', 'IMPRESSES', 'IMPRESSING', 'IMPRESSIVE', 'IMPRESSIVELY', 'IMPROVE', 'IMPROVED', 'IMPROVEMENT', 'IMPROVEMENTS', 'IMPROVES', 'IMPROVING', 'INCREDIBLE', 'INCREDIBLY', 'INFLUENTIAL', 'INFORMATIVE', 'INGENUITY', 
'INNOVATE', 'INNOVATED', 'INNOVATES', 'INNOVATING', 'INNOVATION', 'INNOVATIONS', 'INNOVATIVE', 'INNOVATIVENESS', 'INNOVATOR', 'INNOVATORS', 'INSIGHTFUL', 'INSPIRATION', 'INSPIRATIONAL', 'INTEGRITY', 'INVENT', 'INVENTED', 'INVENTING', 'INVENTION', 'INVENTIONS', 'INVENTIVE', 'INVENTIVENESS', 'INVENTOR', 'INVENTORS', 'LEADERSHIP', 'LEADING', 'LOYAL', 'LUCRATIVE', 'MERITORIOUS', 'OPPORTUNITIES', 'OPPORTUNITY', 'OPTIMISTIC', 'OUTPERFORM', 'OUTPERFORMED', 'OUTPERFORMING', 'OUTPERFORMS', 'PERFECT', 'PERFECTED', 'PERFECTLY', 'PERFECTS', 'PLEASANT', 'PLEASANTLY', 'PLEASED', 'PLEASURE', 'PLENTIFUL', 'POPULAR', 'POPULARITY', 'POSITIVE', 'POSITIVELY', 'PREEMINENCE', 'PREEMINENT', 'PREMIER', 'PREMIERE', 'PRESTIGE', 'PRESTIGIOUS', 'PROACTIVE', 'PROACTIVELY', 'PROFICIENCY', 'PROFICIENT', 'PROFICIENTLY', 'PROFITABILITY', 'PROFITABLE', 'PROFITABLY', 'PROGRESS', 'PROGRESSED', 'PROGRESSES', 'PROGRESSING', 'PROSPERED', 'PROSPERING', 'PROSPERITY', 'PROSPEROUS', 'PROSPERS', 'REBOUND', 'REBOUNDED', 'REBOUNDING', 'RECEPTIVE', 'REGAIN', 'REGAINED', 'REGAINING', 'RESOLVE', 'REVOLUTIONIZE', 'REVOLUTIONIZED', 'REVOLUTIONIZES', 'REVOLUTIONIZING', 'REWARD', 'REWARDED', 'REWARDING', 'SATISFACTION', 'SATISFACTORILY', 'SATISFACTORY', 'SATISFIED', 'SATISFIES', 'SATISFY', 'SATISFYING', 'SMOOTH', 'SMOOTHING', 'SMOOTHLY', 'SMOOTHS', 'SOLVES', 'SOLVING', 'SPECTACULAR', 'SPECTACULARLY', 'STABILITY', 'STABILIZATION', 'STABILIZATIONS', 'STABILIZE', 'STABILIZED', 'STABILIZES', 'STABILIZING', 'STABLE', 'STRENGTH', 'STRENGTHEN', 'STRENGTHENED', 'STRENGTHENING', 'STRENGTHENS', 'STRENGTHS', 'STRONG', 'STRONGER', 'STRONGEST', 'SUCCEED', 'SUCCEEDED', 'SUCCEEDING', 'SUCCEEDS', 'SUCCESS', 'SUCCESSES', 'SUCCESSFUL', 'SUCCESSFULLY', 'SUPERIOR', 'SURPASS', 'SURPASSED', 'SURPASSES', 
'SURPASSING', 'TRANSPARENCY', 'TREMENDOUS', 'TREMENDOUSLY', 'UNMATCHED', 'UNPARALLELED', 'UNSURPASSED', 'UPTURN', 'UPTURNS', 'VALUABLE', 'VERSATILE', 'VERSATILITY', 'VIBRANCY', 'VIBRANT', 'WIN', 'WINNER', 'WINNERS', 'WINNING', 'WORTHY']

def test_get_sentiment_word_dict2():
    assert ref_data.get_sentiment_word_dict()['Modal'] == ['ALMOST', 'ALWAYS', 'APPARENTLY', 'APPEARED', 'APPEARING', 'APPEARS', 'BEST', 'CLEARLY', 'CONCEIVABLE', 'COULD', 'DEFINITELY', 'DEFINITIVELY', 'DEPEND', 'DEPENDED', 'DEPENDING', 'DEPENDS', 'HIGHEST', 'LOWEST', 'MAY', 'MAYBE', 'MIGHT', 'MUST', 'NEARLY', 'NEVER', 'OCCASIONALLY', 'PERHAPS', 'POSSIBLE', 'POSSIBLY', 'SELDOM', 'SELDOMLY', 'SOMETIMES', 'SOMEWHAT', 'STRONGLY', 'SUGGEST', 'SUGGESTS', 'UNAMBIGUOUSLY', 'UNCERTAIN', 'UNCERTAINLY', 'UNCOMPROMISING', 'UNDISPUTED', 'UNDOUBTEDLY', 'UNEQUIVOCAL', 'UNEQUIVOCALLY', 'UNPARALLELED', 'UNSURPASSED', 'WILL']

def test_get_sentiment_word_dict3():
    assert ref_data.get_sentiment_word_dict()['Superfluous'] == ['EXCESSIVE', 'EXTREME', 'REMAINING', 'EXPENDABLE', 'RESIDUARY', 'GRATUITOUS', 'INESSENTIAL', 'SPARE', 'REDUNDANT', 'INORDINATE', 'SUPERABUNDANT', 'UNNEEDED', 'LAVISH', 'SUPEREROGATORY', 'USELESS', 'LEFTOVER', 'SUPERFLUENT', 'ABOUNDING', 'NEEDLESS', 'SUPERNUMERARY', 'NONESSENTIAL', 'SURPLUS', 'DISPENSABLE', 'OVERFLOWING', 'UNASKED', 'EXCESS', 'OVERMUCH', 'UNCALLED-FOR', 'EXORBITANT', 'PLEONASTIC', 'UNREQUIRED', 'EXTRAVAGANT', 'PROFUSE', 'UNWATED']

def test_get_sentiment_word_dict4():
    assert ref_data.get_sentiment_word_dict()['Interesting'] == ['ALLURING', 'READABLE', 'GRIPPING', 'AMUSING', 'REFRESHING', 'INVITING', 'ATTRACTIVE', 'STIMULATING', 'PREPOSSESSING', 'BEAUTIFUL', 'STRIKING', 'RIVETING', 'COMPELLING', 'THOUGHT-PROVOKING', 'STIRRING', 'CURIOUS', 'UNUSUAL', 'WINNING', 'DELIGHTFUL', 'ABSORBING', 'CHARISMATIC', 'ENGAGING', 'AFFECTING', 'ELEGANT', 'EXOTIC', 'ARRESTING', 'EXCEPTIONAL', 'FASCINATING', 'CAPTIVATING', 'GRACIOUS', 'IMPRESSIVE', 'ENCHANTING', 'MAGNETIC', 'INTRIGUING', 'ENGROSSING', 'PLEASURABLE', 'LOVELY', 'ENTHRALLING', 'SUSPICIOUS', 'PLEASING', 'ENTRANCING', 'SUSPICIOUS', 'PLEASING', 'ENTRANCING', 'PROVOCATIVE', 'FINE']

def test_get_sentiment_word_dict_5():
    list1 = ['ALWAYS','BEST','CLEARLY','DEFINITELY','DEFINITIVELY','HIGHEST','LOWEST','MUST','NEVER','STRONGLY','UNAMBIGUOUSLY','UNCOMPROMISING','UNDISPUTED','UNDOUBTEDLY','UNEQUIVOCAL',
             'UNEQUIVOCALLY','UNPARALLELED','UNSURPASSED','WILL']
    list2 = ['ALMOST','APPARENTLY','APPEARED','APPEARING','APPEARS','CONCEIVABLE','COULD','DEPEND','DEPENDED','DEPENDING','DEPENDS','MAY','MAYBE','MIGHT','NEARLY','OCCASIONALLY',
             'PERHAPS','POSSIBLE','POSSIBLY','SELDOM','SELDOMLY','SOMETIMES','SOMEWHAT','SUGGEST','SUGGESTS','UNCERTAIN','UNCERTAINLY']
    res = (list1 + list2).sort()
    assert ref_data.get_sentiment_word_dict()['Modal'].sort() == res
